{
  "name": "Html",
  "tagline": "Working Draft of the HTML specification",
  "body": "# HTML\r\n\r\n[![Build Status](https://travis-ci.org/w3c/html.svg?branch=master)](https://travis-ci.org/w3c/html)\r\n\r\nThis is the repository for the [Working Draft of the HTML specification](https://w3c.github.io/html/). This repository is managed by the [W3C Web Platform Working Group](https://www.w3.org/WebPlatform/WG/).\r\n\r\n## Editorial Documentation\r\n\r\nThe specification is built using Bikeshed. If you would like to propose edits, please make sure that they result in a specification that will build correctly, by testing in your own clone of the repository.\r\n\r\n1. Install [bikeshed](https://github.com/tabatkins/bikeshed)\r\n2. From the HTML folder open a command prompt\r\n3. run bikeshed update: `bikeshed update`\r\n4. run bikeshed: `bikeshed spec`\r\n\r\nFor the multipage version, one can do as follows:\r\n\r\n1. Install [multipage](https://github.com/adrianba/multipage)\r\n2. Follow the instructions there to regenerate the HTML files\r\n\r\nThere are some conventions for linking to things. For example,\r\n* For definitions of standard terms, use `<a>term known to bikeshed</a>`\r\n* For definitions of elements use `<{img}>`\r\n* For definitions of attributes use `<{img/alt}>`\r\n* For WebIDL terms use `{{HTMLImageElement/alt}}`\r\n* For Normative references use `[[!shortname]]` where `shortname` is the W3C \"shortname\" of the spec\r\n* For informative references use `[[shortname]]`\r\n\r\nAnd we try to follow these best-practices:\r\n* Line wrap at column `100` to keep lines easily readable\r\n* Replace tab characters by `2 spaces` (use `2` as the tab stop interval)\r\n* Avoid breaking `<a>` (or `<dfn>`) text content across line breaks (note this is an exception to the above 100 character line-wrap best-practice). E.g., prefer:\r\n\r\n   ```html\r\n   here is a\r\n   <a>link that is not broken across lines</a>\r\n   making it easy to search/replace :)\r\n   ```\r\n   vs.\r\n\r\n   ```html\r\n   here is a <a>link that is sadly broken across\r\n   lines</a> making it much harder to search/replace\r\n   ```\r\n* Use [bikeshed definition list syntax](https://github.com/tabatkins/bikeshed/blob/master/docs/markup.md) where possible. E.g., prefer:\r\n\r\n      ```bikeshed\r\n      : define term\r\n      :: term's definition\r\n      ```\r\n      vs.\r\n\r\n      ```html\r\n      <dl>\r\n        <dt>define term</dt>\r\n        <dd>term's definition</dd>\r\n      </dl>\r\n      ```\r\n      (unless the `<dl>` needs a class attribute for styling i.e., `<dl class=\"domintro\">`)\r\n* Prefer markdown syntax for its brevity and readability. In particular:\r\n   \r\n      ```markdown\r\n      * unordered list item\r\n      ```  \r\n      vs.\r\n\r\n      ```html\r\n      <ul>\r\n        <li>unordered list item</li>\r\n      </ul>\r\n      ```\r\n      ----\r\n\r\n      ```markdown\r\n      1. ordered list item\r\n      ```\r\n      vs.\r\n\r\n      ```html\r\n      <ol>\r\n        <li>ordered list item</li>\r\n      </ol>\r\n      ```\r\n      ----\r\n      \r\n      ```markdown\r\n      newline separator\r\n\r\n      between paragraphs\r\n      ```\r\n      vs.\r\n      \r\n      ```html\r\n      <p>newline separator</p>\r\n\r\n      <p>between paragraphs</p>\r\n      ```\r\n\r\n## Contributing to this Repository\r\n\r\nUse the standard fork, branch, and pull request workflow to propose changes to the specification. Please make branch names informative - by including the issue or bug number for example.\r\n\r\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md), about licensing contributions.\r\n\r\nTo make changes to the specification:\r\n\r\n1. Edit single-page.bs (or one of the include files it references) in the `master` branch. Do not edit the HTML files in the `gh-pages` branch. These are built automatically.\r\n2. Edit the [Acknowledgements section](https://github.com/w3c/html/blob/master/sections/acknowledgements.include) in the `master` branch to include your name.\r\n3. Ideally run bikeshed on single-page.bs to make sure there are no errors (run `bikeshed spec`).\r\n4. Create a pull request but do not include the single-page.html file\r\n5. When the editors merge and commit your pull request Travis-CI will build the HTML files\r\n\r\nThe following considerations should be kept in mind when making a pull request:\r\n\r\n* Editorial changes that improve the readability of the spec or correct spelling or grammatical mistakes are welcome.\r\n* Ideally new features should be proposed in a new specification and not as additions to the HTML spec. The [Web Platform WG charter](https://www.w3.org/2015/10/webplatform-charter.html#deliverables) requires that the WG only adopt new proposals after they have been through an incubation phase. Please consider the WICG's [Intent to Migrate](https://wicg.github.io/admin/intent-to-migrate.html) template when proposing new features.\r\n* Normative changes to the spec should aim to improve interoperability amongst browsers. Such changes should be accompanied by a test case to show that the change does this. It may also include links to bug trackers for browsers showing that there is an intent to adopt the new behaviour.\r\n* Normative changes to the spec should be associated with a bug or issue that describes the reason for the change.\r\n\r\n## HTML branching and versioning\r\n\r\nThe `master` branch of this repository always contains the **work in progress** version of the HTML specification. This branch always welcomes substantive and editorial changes and pull requests.\r\n\r\nThe `master` branch is always exposed at [https://www.w3.org/TR/html/](https://www.w3.org/TR/html/).\r\n\r\nOnce a year, the HTML editors create a new `<version>` branch for the HTML specification. It only contains features that the Working Group believes can be shipped as part of the W3C Recommendation. That branch becomes associated with a specific version of the HTML specification. For a *limited period* of time, the Editor Team only accepts editorial changes or removal of features at risks in this branch. It becomes frozen once that version of HTML becomes a W3C Recommendation. Unless you're targetting a specific version of HTML (and really, you shouldn't), pull requests MUST always be made against the `master` branch.\r\n\r\nThe `<version>` branches are exposed as /TR/html`<version>`/ .\r\n\r\n## Old HTML repository\r\n\r\nThe [old HTML repo](https://github.com/w3c/html-old) is available for archival purposes.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}